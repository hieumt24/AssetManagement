name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef

      - name: Add .NET tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore dependencies
        run: dotnet restore ./backend/src/AssetManagement.API/AssetManagement.API.csproj

      - name: Build
        run: dotnet build --configuration Release ./backend/src/AssetManagement.API/AssetManagement.API.csproj

      - name: Publish
        run: dotnet publish --configuration Release -o ./backend/publish ./backend/src/AssetManagement.API/AssetManagement.API.csproj

      - name: Apply EF Core Migrations
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.CONNECTION_STRING }}
        run: dotnet ef database update --project ./backend/src/AssetManagement.API/AssetManagement.API.csproj

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: ./backend/publish

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: ./backend/publish

      - name: Move Files to Root Directory
        run: |
          mv ./backend/publish/* ./

      - name: Install AWS CLI and EB CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli==1.17.* awsebcli==3.17.* --upgrade --user
          echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_APPLICATION_NAME: ${{ secrets.EB_APPLICATION_NAME }}
          EB_ENVIRONMENT_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}
        run: |
          eb init -p "64bit Amazon Linux 2023 v3.1.1 running .NET 8" $EB_APPLICATION_NAME --region $AWS_REGION
          eb use $EB_ENVIRONMENT_NAME
          eb deploy --staged --profile default

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}
          
      - name: Remove `node_modules` and `package-lock.json`
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          
      - name: Install dependencies
        run: npm install --prefix ./frontend

      - name: Build
        env:
          VITE_REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        run: npm run build --prefix ./frontend

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 sync ./frontend/build s3://$S3_BUCKET --region $AWS_REGION
