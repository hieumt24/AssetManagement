name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ./backend/AssetManagement.Api/AssetManagement.Api.csproj

      - name: Build
        run: dotnet build --configuration Release ./backend/AssetManagement.Api/AssetManagement.Api.csproj

      - name: Publish
        run: dotnet publish --configuration Release -o ./backend/publish ./backend/AssetManagement.Api/AssetManagement.Api.csproj

      - name: Apply EF Core Migrations
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.CONNECTION_STRING }}
        run: dotnet ef database update --project ./backend/AssetManagement.Api/AssetManagement.Api.csproj

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: ./backend/publish

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: ./backend/publish

      - name: Zip Artifact
        run: zip -r backend.zip ./backend/publish

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_APPLICATION_NAME: ${{ secrets.EB_APPLICATION_NAME }}
          EB_ENVIRONMENT_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}
        run: |
          eb init -p "dotnet-core" $EB_APPLICATION_NAME --region $AWS_REGION
          eb use $EB_ENVIRONMENT_NAME
          eb deploy --staged --profile default

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: Install dependencies
        run: npm install --prefix ./frontend

      - name: Build
        run: npm run build --prefix ./frontend

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 sync ./frontend/build s3://$S3_BUCKET --region $AWS_REGION
